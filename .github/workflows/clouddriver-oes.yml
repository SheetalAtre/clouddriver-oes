name: Branch Build clouddriver

on:
  workflow_call:
  push:
    branches:
    - aman

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic
  K8S_DEPLOYMENT_NAME: spin-clouddriver
  K8S_SERVICE_NAME: clouddriver
  K8S_NAMESPACE: cvetarget

jobs:
  branch-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Prepare build variables
        id: build_variables
        run: |
          echo ::set-output name=REPO::ubi8-clouddriver-cve
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
      - name: Login to Quay
        uses: docker/login-action@v1
        # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_KEY }}
      - name: Build
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.build_variables.outputs.VERSION }}
        run: |

          ./gradlew --no-daemon -PenableCrossCompilerPlugin=true clouddriver-web:installDist -x test

            #extra_opts='"--add-opens=java.base/sun.net=ALL-UNNAMED" "--add-exports=java.base/sun.net=ALL-UNNAMED" "--add-opens=java.base/java.time=ALL-UNNAMED"'


            extra_opts='"-Djava.security.egd=file:/dev/./urandom" "-Dspring.config.import=optional:/opt/spinnaker/config/" "--add-opens=java.base/sun.net=ALL-UNNAMED" "--add-exports=java.base/sun.net=ALL-UNNAMED" "--add-opens=java.base/java.time=ALL-UNNAMED" "--add-exports=java.base/sun.security.rsa=ALL-UNNAMED" "--add-exports=java.base/sun.security.pkcs=ALL-UNNAMED" "--add-exports=java.base/sun.security.x509=ALL-UNNAMED"'

            extra_opts_escaped=$(sed 's/[\/&]/\\&/g' <<< "$extra_opts")

            echo $extra_opts_escaped

            #sed "s/^\(DEFAULT_JVM_OPTS=\'.*\)\'$/\1 $extra_opts_escaped\'/" -i clouddriver-web/build/install/clouddriver/bin/clouddriver

                sed "s/^\(DEFAULT_JVM_OPTS\)\s*=\s*'.*'\$/\1='$extra_opts_escaped'/"  -i clouddriver-web/build/install/clouddriver/bin/clouddriver

               # cat clouddriver-web/build/install/clouddriver/bin/clouddriver

      - name: dockerBuildpush
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            TARGETARCH=amd64
          file: docker/ubi8/Dockerfile-fips
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}"
      - name: dockerBuildpushjaeger
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            TARGETARCH=amd64
          file: docker/ubi8/Dockerfile-dev
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-dev"

      - name: Deploy to Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Edit clouddriver.yml
        run: |
          kubectl exec -it spin-spinnaker-halyard-0 -- bash -c "cd /home/spinnaker/.hal/default/service-settings && sed -i '2d' clouddriver.yml && sed -i '1s/^/#/' clouddriver.yml && sed -i '1s/^/artifactId: ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-dev\n/' clouddriver.yml"

      - name: Save changes
        run: |
          kubectl exec -it spin-spinnaker-halyard-0 -- bash -c "hal deploy apply"
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}

